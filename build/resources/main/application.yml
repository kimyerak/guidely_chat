server:
  port: ${SERVER_PORT:8081}

spring:
  application:
    name: chat-orchestra
  jackson:
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://dbguidey2.mysql.database.azure.com:3306/guidely?useSSL=true&requireSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
    username: ${SPRING_DATASOURCE_USERNAME:appchat}
    password: ${SPRING_DATASOURCE_PASSWORD:AppUserPass#123}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    open-in-view: false

management:
  endpoints:
    web:
      exposure:
        include: "health,info"
  endpoint:
    health:
      show-details: when-authorized

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    com.guidely.chatorchestra: INFO
    org.springframework.web: INFO

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  group-configs:
    - group: 'Chat-Orchestra'
      paths-to-match: '/api/**'

# Pure MSA: Client calls RAG server directly
